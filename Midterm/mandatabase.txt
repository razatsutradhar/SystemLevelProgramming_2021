CAT(1)                                              User Commands                                              CAT(1)

NAME
       cat - concatenate files and print on the standard output

SYNOPSIS
       cat [OPTION]... [FILE]...

DESCRIPTION
       Concatenate FILE(s), or standard input, to standard output.

       -A, --show-all
              equivalent to -vET

       -b, --number-nonblank
              number nonempty output lines, overrides -n

       -e     equivalent to -vE

       -E, --show-ends
              display $ at end of each line

       -n, --number
              number all output lines

       -s, --squeeze-blank
              suppress repeated empty output lines

       -t     equivalent to -vT

       -T, --show-tabs
              display TAB characters as ^I

       -u     (ignored)

       -v, --show-nonprinting
              use ^ and M- notation, except for LFD and TAB

       --help display this help and exit

       --version
              output version information and exit

       With no FILE, or when FILE is -, read standard input.





LS(1)                                               User Commands                                               LS(1)

NAME
  ls - list directory contents

SYNOPSIS
  ls [OPTION]... [FILE]...

DESCRIPTION
  List  information  about the FILEs (the current directory by default).  Sort entries alphabetically if none of
  -cftuvSUX nor --sort is specified.

  Mandatory arguments to long options are mandatory for short options too.

  -a, --all
         do not ignore entries starting with .

  -A, --almost-all
         do not list implied . and ..

  --author
         with -l, print the author of each file

  -b, --escape
         print C-style escapes for nongraphic characters

  --block-size=SIZE
         scale sizes by SIZE before printing them; e.g., '--block-size=M' prints sizes  in  units  of  1,048,576
         bytes; see SIZE format below

  -B, --ignore-backups
         do not list implied entries ending with ~

  -c     with  -lt:  sort  by,  and show, ctime (time of last modification of file status information); with -l:
         show ctime and sort by name; otherwise: sort by ctime, newest first

  -C     list entries by columns

  --color[=WHEN]
         colorize the output; WHEN can be 'never', 'auto', or 'always' (the default); more info below

  -d, --directory
         list directories themselves, not their contents

  -D, --dired
         generate output designed for Emacs' dired mode

  -f     do not sort, enable -aU, disable -ls --color


  CHMOD(1)                                                                                        User Commands                                                                                        CHMOD(1)

  NAME
         chmod - change file mode bits

  SYNOPSIS
         chmod [OPTION]... MODE[,MODE]... FILE...
         chmod [OPTION]... OCTAL-MODE FILE...
         chmod [OPTION]... --reference=RFILE FILE...

  DESCRIPTION
         This  manual  page documents the GNU version of chmod.  chmod changes the file mode bits of each given file according to mode, which can be either a symbolic representation of changes to make, or an
         octal number representing the bit pattern for the new mode bits.

         The format of a symbolic mode is [ugoa...][[+-=][perms...]...], where perms is either zero or more letters from the set rwxXst, or a single letter from the set ugo.  Multiple symbolic modes  can  be
         given, separated by commas.

         A combination of the letters ugoa controls which users' access to the file will be changed: the user who owns it (u), other users in the file's group (g), other users not in the file's group (o), or
         all users (a).  If none of these are given, the effect is as if a were given, but bits that are set in the umask are not affected.

         The operator + causes the selected file mode bits to be added to the existing file mode bits of each file; - causes them to be removed; and = causes them to be added and causes unmentioned  bits  to
         be removed except that a directory's unmentioned set user and group ID bits are not affected.

         The  letters  rwxXst select file mode bits for the affected users: read (r), write (w), execute (or search for directories) (x), execute/search only if the file is a directory or already has execute
         permission for some user (X), set user or group ID on execution (s), restricted deletion flag or sticky bit (t).  Instead of one or more of these letters, you can specify exactly one of the  letters
         ugo:  the permissions granted to the user who owns the file (u), the permissions granted to other users who are members of the file's group (g), and the permissions granted to users that are in nei‚Äê
         ther of the two preceding categories (o).

         A numeric mode is from one to four octal digits (0-7), derived by adding up the bits with values 4, 2, and 1.  Omitted digits are assumed to be leading zeros.  The first digit selects the  set  user
         ID  (4)  and  set group ID (2) and restricted deletion or sticky (1) attributes.  The second digit selects permissions for the user who owns the file: read (4), write (2), and execute (1); the third
         selects permissions for other users in the file's group, with the same values; and the fourth for other users not in the file's group, with the same values.

         chmod never changes the permissions of symbolic links; the chmod system call cannot change their permissions.  This is not a problem since the permissions of symbolic links are never used.  However,
         for each symbolic link listed on the command line, chmod changes the permissions of the pointed-to file.  In contrast, chmod ignores symbolic links encountered during recursive directory traversals.

  SETUID AND SETGID BITS
         chmod  clears the set-group-ID bit of a regular file if the file's group ID does not match the user's effective group ID or one of the user's supplementary group IDs, unless the user has appropriate
         privileges.  Additional restrictions may cause the set-user-ID and set-group-ID bits of MODE or RFILE to be ignored.  This behavior depends on the policy and functionality of  the  underlying  chmod
         system call.  When in doubt, check the underlying system behavior.

         chmod preserves a directory's set-user-ID and set-group-ID bits unless you explicitly specify otherwise.  You can set or clear the bits with symbolic modes like u+s and g-s, and you can set (but not
         clear) the bits with a numeric mode.

  RESTRICTED DELETION FLAG OR STICKY BIT
         The restricted deletion flag or sticky bit is a single bit, whose interpretation depends on the file type.  For directories, it prevents unprivileged users from removing or renaming a  file  in  the
         directory  unless they own the file or the directory; this is called the restricted deletion flag for the directory, and is commonly found on world-writable directories like /tmp.  For regular files
         on some older systems, the bit saves the program's text image on the swap device so it will load more quickly when run; this is called the sticky bit.

  OPTIONS

  DATE(1)                                                                                         User Commands                                                                                         DATE(1)

  NAME
         date - print or set the system date and time

  SYNOPSIS
         date [OPTION]... [+FORMAT]
         date [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]

  DESCRIPTION
         Display the current time in the given FORMAT, or set the system date.

         Mandatory arguments to long options are mandatory for short options too.

         -d, --date=STRING
                display time described by STRING, not 'now'

         -f, --file=DATEFILE
                like --date once for each line of DATEFILE

         -I[TIMESPEC], --iso-8601[=TIMESPEC]
                output date/time in ISO 8601 format.  TIMESPEC='date' for date only (the default), 'hours', 'minutes', 'seconds', or 'ns' for date and time to the indicated precision.

         -r, --reference=FILE
                display the last modification time of FILE

         -R, --rfc-2822
                output date and time in RFC 2822 format.  Example: Mon, 07 Aug 2006 12:34:56 -0600

         --rfc-3339=TIMESPEC
                output  date  and  time  in  RFC  3339  format.   TIMESPEC='date',  'seconds', or 'ns' for date and time to the indicated precision.  Date and time components are separated by a single space:
                2006-08-07 12:34:56-06:00

         -s, --set=STRING
                set time described by STRING

         -u, --utc, --universal
                print or set Coordinated Universal Time (UTC)

         --help display this help and exit

         --version
                output version information and exit

         FORMAT controls the output.  Interpreted sequences are:

         %%     a literal %

         %a     locale's abbreviated weekday name (e.g., Sun)

 ECHO(1)                                                                                         User Commands                                                                                         ECHO(1)

 NAME
        echo - display a line of text

 SYNOPSIS
        echo [SHORT-OPTION]... [STRING]...
        echo LONG-OPTION

 DESCRIPTION
        Echo the STRING(s) to standard output.

        -n     do not output the trailing newline

        -e     enable interpretation of backslash escapes

        -E     disable interpretation of backslash escapes (default)

        --help display this help and exit

        --version
               output version information and exit

        If -e is in effect, the following sequences are recognized:

        \\     backslash

        \a     alert (BEL)

        \b     backspace

        \c     produce no further output

        \e     escape

        \f     form feed

        \n     new line

        \r     carriage return

        \t     horizontal tab

        \v     vertical tab

        \0NNN  byte with octal value NNN (1 to 3 digits)

        \xHH   byte with hexadecimal value HH (1 to 2 digits)


MAN(1)                                                                                        Manual pager utils                                                                                       MAN(1)

NAME
       man - an interface to the on-line reference manuals

SYNOPSIS
       man  [-C  file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-m system[,...]] [-M path] [-S list] [-e extension] [-i|-I] [--regex|--wildcard] [--names-only] [-a] [-u] [--no-subpages]
       [-P pager] [-r prompt] [-7] [-E encoding] [--no-hyphenation] [--no-justification] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z] [[section] page ...] ...
       man -k [apropos options] regexp ...
       man -K [-w|-W] [-S list] [-i|-I] [--regex] [section] term ...
       man -f [whatis options] page ...
       man -l [-C file] [-d] [-D] [--warnings[=warnings]] [-R encoding] [-L locale] [-P pager] [-r prompt] [-7] [-E encoding] [-p string] [-t] [-T[device]] [-H[browser]] [-X[dpi]] [-Z] file ...
       man -w|-W [-C file] [-d] [-D] page ...
       man -c [-C file] [-d] [-D] page ...
       man [-?V]

DESCRIPTION
       man is the system's manual pager. Each page argument given to man is normally the name of a program, utility or function.  The manual page associated with each of these arguments is then  found  and
       displayed. A section, if provided, will direct man to look only in that section of the manual.  The default action is to search in all of the available sections, following a pre-defined order and to
       show only the first page found, even if page exists in several sections.

       The table below shows the section numbers of the manual followed by the types of pages they contain.

       1   Executable programs or shell commands
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions eg /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and conventions), e.g. man(7), groff(7)
       8   System administration commands (usually only for root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

       Conventional section names include NAME, SYNOPSIS, CONFIGURATION, DESCRIPTION, OPTIONS, EXIT STATUS, RETURN VALUE, ERRORS, ENVIRONMENT, FILES, VERSIONS, CONFORMING TO, NOTES, BUGS, EXAMPLE, AUTHORS,
       and SEE ALSO.

       The following conventions apply to the SYNOPSIS section and can be used as a guide in other sections.

       bold text          type exactly as shown.
       italic text        replace with appropriate argument.
       [-abc]             any or all arguments within [ ] are optional.
       -a|-b              options delimited by | cannot be used together.
       argument ...       argument is repeatable.
       [expression] ...   entire expression within [ ] is repeatable.

       Exact  rendering may vary depending on the output device.  For instance, man will usually not be able to render italics when running in a terminal, and will typically use underlined or coloured text
       instead.
